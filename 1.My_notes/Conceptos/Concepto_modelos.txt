Modelos

* Un Django model generalmente se refiere a una tabla de la base de datos, los atributos de ese 
modelo se convierten en las columnas de esa tabla esos atributos reciben el nombre de django 
fields los cuales manejan automáticamente las conversiones de tipos de datos para la base de datos 
que estemos usando.

* Los modelos definen la estructura de los datos almacenados, incluidos los tipos de campo y los 
atributos de cada campo, como su tamaño máximo, valores predeterminados, lista de selección de 
opciones, texto de ayuda para la documentación, texto de etiqueta para formularios, etc.

* Un modelo es la fuente única y definitiva de información sobre sus datos. Contiene los campos 
esenciales y los comportamientos de los datos que usted guarda. Django sigue el Principio DRY. 
El objetivo es definir el modelo de datos en un solo lugar y derivar cosas de este automáticamente.

Mediante los modelos se puede interactuar con la base de datos, validar registros y es posible
establecer relación entre los modelos. 

Un ejemplo de modelo es el siguiente:

class Town(models.Model):
    name = models.CharField(max_length=100)
    description = models.TextField()

El modelo tiene el nombre de Town, hereda de la clase Model.
El modelo tiene dos atributos name y description.
Name es de tipo CharField y description es de tipo TextField.

Tomando en cuenta que los modelos son como tablas en SQL. La tabla se llamará Town y tendrá dos 
columnas, una llamada name y otra llamada description, además contará con un id que es creado
automáticamente al ejecutar las migraciones. 
