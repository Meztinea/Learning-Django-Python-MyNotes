Templates

Un template es la capa de presentación , aquí se define como se mostrará la información al cliente
ya sea mediante un archivo html, un objeto json, xml, etc. 

Una plantilla o template es un archivo de texto que determina la estructura o diseño de un archivo 
(como una página HTML), con marcadores usados para representar el contenido real. Django 
automaticamente buscará plantillas en un directorio llamado 'templates' de su aplicación. 

Podemos definir un template como el archivo a través del cual el usuario podrá visualizar la información 
que solicita. Comúnmente asociamos los templates para archivos .html y, si bien es cierto, estamos en 
lo correcto, en Django no es el único tipo de archivo que podemos utilizar. De igual forma podemos 
presentar la información en archivos .XML, .YAML, .JSON etc.. Esto gracias al fabuloso motor de Template 
que posee el Framework.

Un ejemplo de un template es el siguiente: 

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Aguascalientes y sus municipios</title>
</head>
<body>
    <h1>
        {{ town.name }}
    </h1>
</body>
</html>

Es código HTML 5, lleva por titulo Aguascalientes y sus municipios y en el h1 del body utiliza
los datos que le ha enviado la vista, para poder mostrarlos. En este caso muestra el nombre de 
un municipio.

Los datos que está mostrando el template han sido extraidos desde la base de datos por medio de 
modelos, la vista solicitó los datos y los envió al template para que el template los organice 
y muestre en el lugar que les corresponde.
